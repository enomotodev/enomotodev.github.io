<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Docker on enomotodev</title>
    <link>http://enomotodev.github.io/tags/docker/index.xml</link>
    <description>Recent content in Docker on enomotodev</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja_JP</language>
    <managingEditor>enomoto.dev@gmail.com (Takafumi Enomoto)</managingEditor>
    <webMaster>enomoto.dev@gmail.com (Takafumi Enomoto)</webMaster>
    <copyright>(c) 2016 enomotodev</copyright>
    <atom:link href="http://enomotodev.github.io/tags/docker/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>CentOS 7 に Re:dash インストールして MySQL のデータをグラフ表示してみた</title>
      <link>http://enomotodev.github.io/post/install-redash/</link>
      <pubDate>Mon, 12 Sep 2016 23:23:16 +0900</pubDate>
      <author>enomoto.dev@gmail.com (Takafumi Enomoto)</author>
      <guid>http://enomotodev.github.io/post/install-redash/</guid>
      <description>

&lt;h2 id=&#34;作業環境&#34;&gt;作業環境&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;CentOS 7.2&lt;/li&gt;
&lt;li&gt;Java 1.8.0_101&lt;/li&gt;
&lt;li&gt;MySQL 5.7.14&lt;/li&gt;
&lt;li&gt;Git 1.8.3.1&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;docker-docker-compose-のインストール&#34;&gt;Docker + Docker Compose のインストール&lt;/h2&gt;

&lt;p&gt;Re:dash は CentOS では Docker のコンテナ上で起動させるので、まずは Docker をインストールします。&lt;/p&gt;

&lt;h3 id=&#34;kernel-のバージョンを確認する&#34;&gt;Kernel のバージョンを確認する&lt;/h3&gt;

&lt;p&gt;CentOS 7 に Docker をインストールするには Kernel が 3.10 以上ではないといけないようなので Kernel のバージョンを確認します。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ uname -r
3.10.0-327.el7.x86_64
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;3.10 以上なので、Docker のインストールを進めていきます。&lt;/p&gt;

&lt;h3 id=&#34;docker-のインストール&#34;&gt;Docker のインストール&lt;/h3&gt;

&lt;p&gt;まずは root ユーザに変更します。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ sudo su -
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;ここからは root ユーザでの作業にになります。&lt;/p&gt;

&lt;p&gt;次のコマンドで Docker のインストールができます。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# curl -fsSL https://get.docker.com/ | sh
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;インストールが完了したので、バージョンを確認します。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# docker --version
Docker version 1.12.1, build 23cf638
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Docker を起動させます。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# service docker start
Redirecting to /bin/systemctl start  docker.service
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;自動起動の設定も行っておきましょう。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# chkconfig docker on
Note: Forwarding request to &#39;systemctl enable docker.service&#39;.
Created symlink from /etc/systemd/system/multi-user.target.wants/docker.service to /usr/lib/systemd/system/docker.service.
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;これで Docker のインストールは完了です。&lt;/p&gt;

&lt;h3 id=&#34;docker-compose-のインストール&#34;&gt;Docker Compose のインストール&lt;/h3&gt;

&lt;p&gt;Re:dash は Docker コンテナの管理を Docker Compose で行っているので、Docker Compose もインストールします。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/docker/compose/releases&#34; target=&#34;_blank&#34;&gt;GitHub のリリースページ&lt;/a&gt; から最新のコマンドをコピーして、実行します。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# curl -L https://github.com/docker/compose/releases/download/1.8.0/docker-compose-`uname -s`-`uname -m` &amp;gt; /usr/local/bin/docker-compose
# chmod +x /usr/local/bin/docker-compose
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;これで Docker Compose のインストールが完了となりますので、バージョンを確認してみます。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# docker-compose --version
docker-compose version 1.8.0, build f3628c7
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;re-dash-のインストール&#34;&gt;Re:dash のインストール&lt;/h2&gt;

&lt;p&gt;Docker + Docker Compose のインストールが完了したので、いよいよ Re:dash のインストールをしたいと思います。&lt;/p&gt;

&lt;p&gt;まずは、&lt;code&gt;git clone&lt;/code&gt; して、サンプルの設定ファイルを元に設定ファイルを作成します。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# git clone https://github.com/getredash/redash.git
# cd redash/
# cp docker-compose-example.yml docker-compose.yml
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;まずは PostgreSQL のコンテナを起動します。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# docker-compose up postgres
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;PostgreSQL のコンテナが起動したら、次のコマンドを実行していきます。&lt;/p&gt;

&lt;p&gt;なお、PostgreSQL のコンテナ起動後、端末は操作できなくなるので、別タブを開いたりして、再度アクセスし、root ユーザに変更してください。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# ./setup/docker/create_database.sh
# docker-compose up
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;これで Re:dash が起動したので、ブラウザからアクセスしてみましょう。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://enomotodev.github.io/images/redash_login.png&#34; alt=&#34;Re:dash ログイン画面&#34; class=&#34;image&#34; /&gt;&lt;/p&gt;

&lt;p&gt;無事ログインできました！&lt;/p&gt;

&lt;p&gt;ログイン画面が表示されたので、ログインしてみましょう。&lt;/p&gt;

&lt;p&gt;初期の Email、Password はこちらになります。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Email：admin&lt;/li&gt;
&lt;li&gt;Password：admin&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&#34;http://enomotodev.github.io/images/redash_top.png&#34; alt=&#34;Re:dash TOP画面&#34; class=&#34;image&#34; /&gt;&lt;/p&gt;

&lt;h2 id=&#34;mysql-への接続&#34;&gt;MySQL への接続&lt;/h2&gt;

&lt;p&gt;画面右上の『Data Sources』 → 『New Data Source』をクリックし、MySQL の設定を行っていきます。&lt;/p&gt;

&lt;p&gt;ここで注意するのは、MySQL はコンテナのホスト側にあるので、MySQL の Host は Re:dash への接続元 IP になります。&lt;/p&gt;

&lt;p&gt;Re:dash への接続元 IP はコンソールに出力されている Re:dash のアクセスログから判断することができます。&lt;/p&gt;

&lt;h2 id=&#34;グラフ表示する&#34;&gt;グラフ表示する&lt;/h2&gt;

&lt;p&gt;まず、画面上部の『Queries』 → 『New Query』から Query 入力画面に移動し、『Data Source』に先ほど登録した Data Source がきちんと設定されていることを確認します。&lt;/p&gt;

&lt;p&gt;次に、入力フォームに SQL を記述し、『Execute』ボタンを押します。&lt;/p&gt;

&lt;p&gt;そうすると下記のように結果が出力されます。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://enomotodev.github.io/images/redash_output.png&#34; alt=&#34;Re:dash SQL 結果画面&#34; class=&#34;image&#34; /&gt;&lt;/p&gt;

&lt;p&gt;結果に問題ないようであれば、『Save』ボタンで今回の SQL を保存することができます。&lt;/p&gt;

&lt;p&gt;結果をグラフ化するには『+ NEW VISUALIZATION』ボタンを押して、Visualization Editor に移動します。&lt;/p&gt;

&lt;p&gt;画面に従って、グラフの種類や、縦軸・横軸に表示するカラムを設定していくと次のようなグラフが完成します。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://enomotodev.github.io/images/redash_graph.png&#34; alt=&#34;Re:dash グラフ表示&#34; class=&#34;image&#34; /&gt;&lt;/p&gt;

&lt;h2 id=&#34;まとめ&#34;&gt;まとめ&lt;/h2&gt;

&lt;p&gt;Re:dash を使うことによって、SQL の結果を簡単にグラフ化することができました。&lt;/p&gt;

&lt;p&gt;Re:dash は一つひとつの SQL やグラフに固定の URL が割り振られるので、URL さえあれば、SQL での分析結果をみんなで共有することができ、分析結果の属人化を防ぐことができます。&lt;/p&gt;

&lt;p&gt;導入自体もそれほど難しくはないので、今後積極的に活用していきたいと思います。&lt;/p&gt;




&lt;div class=&#34;amazon-shortcode-box&#34;&gt;
  &lt;div class=&#34;amazon-shortcode-image&#34;&gt;
    &lt;a href=&#34;https://www.amazon.co.jp/%E3%81%BE%E3%81%A4%E3%82%82%E3%81%A8%E3%82%86%E3%81%8D%E3%81%B2%E3%82%8D-%E8%A8%80%E8%AA%9E%E3%81%AE%E3%81%97%E3%81%8F%E3%81%BF/dp/4822239179%3FSubscriptionId%3DAKIAJCAHSSNNKIXIAI2Q%26tag%3Denomotodev-22%26linkCode%3Dxm2%26camp%3D2025%26creative%3D165953%26creativeASIN%3D4822239179&#34; name=&#34;amazon-shortcode&#34; target=&#34;_blank&#34;&gt;
      &lt;img src=&#34;https://images-fe.ssl-images-amazon.com/images/I/51vGKhInMkL._SL160_.jpg&#34; alt=&#34;まつもとゆきひろ 言語のしくみ&#34; /&gt;
    &lt;/a&gt;
  &lt;/div&gt;
  &lt;div class=&#34;amazon-shortcode-info&#34;&gt;
    &lt;p class=&#34;amazon-shortcode-title&#34;&gt;
      &lt;a href=&#34;https://www.amazon.co.jp/%E3%81%BE%E3%81%A4%E3%82%82%E3%81%A8%E3%82%86%E3%81%8D%E3%81%B2%E3%82%8D-%E8%A8%80%E8%AA%9E%E3%81%AE%E3%81%97%E3%81%8F%E3%81%BF/dp/4822239179%3FSubscriptionId%3DAKIAJCAHSSNNKIXIAI2Q%26tag%3Denomotodev-22%26linkCode%3Dxm2%26camp%3D2025%26creative%3D165953%26creativeASIN%3D4822239179&#34; name=&#34;amazon-shortcode&#34; target=&#34;_blank&#34;&gt;
        まつもとゆきひろ 言語のしくみ
      &lt;/a&gt;
    &lt;/p&gt;
    
      &lt;p class=&#34;amazon-shortcode-author&#34;&gt;まつもとゆきひろ&lt;/p&gt;
    
    &lt;div class=&#34;amazon-shortcode-detail&#34;&gt;
      
        &lt;p&gt;出版社：日経BP社&lt;/p&gt;
      
      
        &lt;p&gt;発売日：2016-12-22&lt;/p&gt;
      
    &lt;/div&gt;
    &lt;p&gt;
      &lt;a href=&#34;https://www.amazon.co.jp/%E3%81%BE%E3%81%A4%E3%82%82%E3%81%A8%E3%82%86%E3%81%8D%E3%81%B2%E3%82%8D-%E8%A8%80%E8%AA%9E%E3%81%AE%E3%81%97%E3%81%8F%E3%81%BF/dp/4822239179%3FSubscriptionId%3DAKIAJCAHSSNNKIXIAI2Q%26tag%3Denomotodev-22%26linkCode%3Dxm2%26camp%3D2025%26creative%3D165953%26creativeASIN%3D4822239179&#34; name=&#34;backport&#34; target=&#34;_blank&#34;&gt;
        &lt;i class=&#34;fa fa-amazon&#34; aria-hidden=&#34;true&#34;&gt;&lt;/i&gt;&amp;nbsp;Amazonで詳細を見る
      &lt;/a&gt;
    &lt;/p&gt;
  &lt;/div&gt;
  &lt;br style=&#34;clear: both;&#34;/&gt;
&lt;/div&gt;

</description>
    </item>
    
    <item>
      <title>【 Composer 編】Mac に Docker インストールしてみた</title>
      <link>http://enomotodev.github.io/post/docker-mac-composer/</link>
      <pubDate>Fri, 29 Apr 2016 14:33:00 +0900</pubDate>
      <author>enomoto.dev@gmail.com (Takafumi Enomoto)</author>
      <guid>http://enomotodev.github.io/post/docker-mac-composer/</guid>
      <description>

&lt;p&gt;前回の『&lt;a href=&#34;http://enomotodev.github.io/post/docker-mac-phpfpm/&#34;&gt;【 php-fpm 編】Mac に Docker インストールしてみた&lt;/a&gt;』の続きです&lt;/p&gt;

&lt;p&gt;Database と連携する前に、Composer と連携し、PHP フレームワークの &lt;a href=&#34;https://laravel.com/&#34; target=&#34;_blank&#34;&gt;Laravel&lt;/a&gt; をインストールしてみようと思います&lt;/p&gt;

&lt;h2 id=&#34;composer-のイメージを-pull-する&#34;&gt;Composer のイメージを pull する&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;$ docker pull composer/composer
...（略）
Status: Downloaded newer image for composer/composer:latest
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;composer-コンテナを起動する&#34;&gt;Composer コンテナを起動する&lt;/h2&gt;

&lt;p&gt;Composer で Laravel をインストールする前に、前回作成した &lt;code&gt;index.php&lt;/code&gt; を削除しておきましょう&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;cd ~/docker/www &amp;amp;&amp;amp; rm index.php
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;それでは Composer で　Laravel をインストールしてみます&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ docker run --rm -v /Users/enomotodev/docker/www:/app composer/composer create-project --prefer-dist laravel/laravel ./
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;これで Laravel がインストールされました&lt;/p&gt;

&lt;p&gt;&lt;code&gt;--rm&lt;/code&gt; オプションを使用することによって、コンテナを起動して終了するとコンテナを破棄してくれます&lt;/p&gt;

&lt;p&gt;&lt;code&gt;~/nginx/nginx.conf&lt;/code&gt; を下記のように編集して、Nginx のコンテナを再起動させます&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;~/nginx/nginx.conf&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code&gt;root /var/www/html;
↓
root /var/www/html/public;
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;Nginx コンテナを再起動&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code&gt;$ docker restart nginx
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;次にパーミッションを整えます&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ chmod -R 777 ~/docker/www/storage ~/docker/www/bootstrap/cache
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;ブラウザで確認してみましょう&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://enomotodev.github.io/images/docker-composer.png&#34; alt=&#34;Docker Composer Laravel ブラウザ確認&#34; class=&#34;image&#34; /&gt;&lt;/p&gt;

&lt;p&gt;無事 Laravel が起動できました！&lt;/p&gt;

&lt;h2 id=&#34;まとめ&#34;&gt;まとめ&lt;/h2&gt;

&lt;p&gt;PHP 開発に欠かせない Composer も Docker で簡単に導入することができました&lt;/p&gt;

&lt;p&gt;Composer は install や update 時にしか使わないので、&lt;code&gt;docker run&lt;/code&gt; のときに &lt;code&gt;--rm&lt;/code&gt; オプションを使用し、コンテナの終了時にコンテナを破棄するのがポイントになります&lt;/p&gt;

&lt;p&gt;次回は MySQL と連携していきたいと思います&lt;/p&gt;

&lt;p&gt;


&lt;div class=&#34;amazon-shortcode-box&#34;&gt;
  &lt;div class=&#34;amazon-shortcode-image&#34;&gt;
    &lt;a href=&#34;https://www.amazon.co.jp/%E3%83%97%E3%83%AD%E3%82%B0%E3%83%A9%E3%83%9E%E3%81%AE%E3%81%9F%E3%82%81%E3%81%AEDocker%E6%95%99%E7%A7%91%E6%9B%B8-%E3%82%A4%E3%83%B3%E3%83%95%E3%83%A9%E3%81%AE%E5%9F%BA%E7%A4%8E%E7%9F%A5%E8%AD%98-%E3%82%B3%E3%83%BC%E3%83%89%E3%81%AB%E3%82%88%E3%82%8B%E7%92%B0%E5%A2%83%E6%A7%8B%E7%AF%89%E3%81%AE%E8%87%AA%E5%8B%95%E5%8C%96-%E9%98%BF%E4%BD%90-%E5%BF%97%E4%BF%9D/dp/479814102X%3FSubscriptionId%3DAKIAJCAHSSNNKIXIAI2Q%26tag%3Denomotodev-22%26linkCode%3Dxm2%26camp%3D2025%26creative%3D165953%26creativeASIN%3D479814102X&#34; name=&#34;amazon-shortcode&#34; target=&#34;_blank&#34;&gt;
      &lt;img src=&#34;https://images-fe.ssl-images-amazon.com/images/I/51G1TiUZprL._SL160_.jpg&#34; alt=&#34;プログラマのためのDocker教科書 インフラの基礎知識&amp;amp;コードによる環境構築の自動化&#34; /&gt;
    &lt;/a&gt;
  &lt;/div&gt;
  &lt;div class=&#34;amazon-shortcode-info&#34;&gt;
    &lt;p class=&#34;amazon-shortcode-title&#34;&gt;
      &lt;a href=&#34;https://www.amazon.co.jp/%E3%83%97%E3%83%AD%E3%82%B0%E3%83%A9%E3%83%9E%E3%81%AE%E3%81%9F%E3%82%81%E3%81%AEDocker%E6%95%99%E7%A7%91%E6%9B%B8-%E3%82%A4%E3%83%B3%E3%83%95%E3%83%A9%E3%81%AE%E5%9F%BA%E7%A4%8E%E7%9F%A5%E8%AD%98-%E3%82%B3%E3%83%BC%E3%83%89%E3%81%AB%E3%82%88%E3%82%8B%E7%92%B0%E5%A2%83%E6%A7%8B%E7%AF%89%E3%81%AE%E8%87%AA%E5%8B%95%E5%8C%96-%E9%98%BF%E4%BD%90-%E5%BF%97%E4%BF%9D/dp/479814102X%3FSubscriptionId%3DAKIAJCAHSSNNKIXIAI2Q%26tag%3Denomotodev-22%26linkCode%3Dxm2%26camp%3D2025%26creative%3D165953%26creativeASIN%3D479814102X&#34; name=&#34;amazon-shortcode&#34; target=&#34;_blank&#34;&gt;
        プログラマのためのDocker教科書 インフラの基礎知識&amp;amp;コードによる環境構築の自動化
      &lt;/a&gt;
    &lt;/p&gt;
    
      &lt;p class=&#34;amazon-shortcode-author&#34;&gt;阿佐 志保&lt;/p&gt;
    
    &lt;div class=&#34;amazon-shortcode-detail&#34;&gt;
      
        &lt;p&gt;出版社：翔泳社&lt;/p&gt;
      
      
        &lt;p&gt;発売日：2015-11-20&lt;/p&gt;
      
    &lt;/div&gt;
    &lt;p&gt;
      &lt;a href=&#34;https://www.amazon.co.jp/%E3%83%97%E3%83%AD%E3%82%B0%E3%83%A9%E3%83%9E%E3%81%AE%E3%81%9F%E3%82%81%E3%81%AEDocker%E6%95%99%E7%A7%91%E6%9B%B8-%E3%82%A4%E3%83%B3%E3%83%95%E3%83%A9%E3%81%AE%E5%9F%BA%E7%A4%8E%E7%9F%A5%E8%AD%98-%E3%82%B3%E3%83%BC%E3%83%89%E3%81%AB%E3%82%88%E3%82%8B%E7%92%B0%E5%A2%83%E6%A7%8B%E7%AF%89%E3%81%AE%E8%87%AA%E5%8B%95%E5%8C%96-%E9%98%BF%E4%BD%90-%E5%BF%97%E4%BF%9D/dp/479814102X%3FSubscriptionId%3DAKIAJCAHSSNNKIXIAI2Q%26tag%3Denomotodev-22%26linkCode%3Dxm2%26camp%3D2025%26creative%3D165953%26creativeASIN%3D479814102X&#34; name=&#34;backport&#34; target=&#34;_blank&#34;&gt;
        &lt;i class=&#34;fa fa-amazon&#34; aria-hidden=&#34;true&#34;&gt;&lt;/i&gt;&amp;nbsp;Amazonで詳細を見る
      &lt;/a&gt;
    &lt;/p&gt;
  &lt;/div&gt;
  &lt;br style=&#34;clear: both;&#34;/&gt;
&lt;/div&gt;




&lt;div class=&#34;amazon-shortcode-box&#34;&gt;
  &lt;div class=&#34;amazon-shortcode-image&#34;&gt;
    &lt;a href=&#34;https://www.amazon.co.jp/Docker%E3%82%A8%E3%82%AD%E3%82%B9%E3%83%91%E3%83%BC%E3%83%88%E9%A4%8A%E6%88%90%E8%AA%AD%E6%9C%AC%EF%BC%BB%E6%B4%BB%E7%94%A8%E3%81%AE%E5%9F%BA%E7%A4%8E%E3%81%A8%E5%AE%9F%E8%B7%B5%E3%83%8E%E3%82%A6%E3%83%8F%E3%82%A6%E6%BA%80%E8%BC%89%EF%BC%81%EF%BC%BD-Software-Design-plus-%E6%9D%89%E5%B1%B1/dp/4774174416%3FSubscriptionId%3DAKIAJCAHSSNNKIXIAI2Q%26tag%3Denomotodev-22%26linkCode%3Dxm2%26camp%3D2025%26creative%3D165953%26creativeASIN%3D4774174416&#34; name=&#34;amazon-shortcode&#34; target=&#34;_blank&#34;&gt;
      &lt;img src=&#34;https://images-fe.ssl-images-amazon.com/images/I/51gFcibBx-L._SL160_.jpg&#34; alt=&#34;Dockerエキスパート養成読本［活用の基礎と実践ノウハウ満載！］ (Software Design plus)&#34; /&gt;
    &lt;/a&gt;
  &lt;/div&gt;
  &lt;div class=&#34;amazon-shortcode-info&#34;&gt;
    &lt;p class=&#34;amazon-shortcode-title&#34;&gt;
      &lt;a href=&#34;https://www.amazon.co.jp/Docker%E3%82%A8%E3%82%AD%E3%82%B9%E3%83%91%E3%83%BC%E3%83%88%E9%A4%8A%E6%88%90%E8%AA%AD%E6%9C%AC%EF%BC%BB%E6%B4%BB%E7%94%A8%E3%81%AE%E5%9F%BA%E7%A4%8E%E3%81%A8%E5%AE%9F%E8%B7%B5%E3%83%8E%E3%82%A6%E3%83%8F%E3%82%A6%E6%BA%80%E8%BC%89%EF%BC%81%EF%BC%BD-Software-Design-plus-%E6%9D%89%E5%B1%B1/dp/4774174416%3FSubscriptionId%3DAKIAJCAHSSNNKIXIAI2Q%26tag%3Denomotodev-22%26linkCode%3Dxm2%26camp%3D2025%26creative%3D165953%26creativeASIN%3D4774174416&#34; name=&#34;amazon-shortcode&#34; target=&#34;_blank&#34;&gt;
        Dockerエキスパート養成読本［活用の基礎と実践ノウハウ満載！］ (Software Design plus)
      &lt;/a&gt;
    &lt;/p&gt;
    
      &lt;p class=&#34;amazon-shortcode-author&#34;&gt;杉山 貴章&lt;/p&gt;
    
    &lt;div class=&#34;amazon-shortcode-detail&#34;&gt;
      
        &lt;p&gt;出版社：技術評論社&lt;/p&gt;
      
      
        &lt;p&gt;発売日：2015-06-18&lt;/p&gt;
      
    &lt;/div&gt;
    &lt;p&gt;
      &lt;a href=&#34;https://www.amazon.co.jp/Docker%E3%82%A8%E3%82%AD%E3%82%B9%E3%83%91%E3%83%BC%E3%83%88%E9%A4%8A%E6%88%90%E8%AA%AD%E6%9C%AC%EF%BC%BB%E6%B4%BB%E7%94%A8%E3%81%AE%E5%9F%BA%E7%A4%8E%E3%81%A8%E5%AE%9F%E8%B7%B5%E3%83%8E%E3%82%A6%E3%83%8F%E3%82%A6%E6%BA%80%E8%BC%89%EF%BC%81%EF%BC%BD-Software-Design-plus-%E6%9D%89%E5%B1%B1/dp/4774174416%3FSubscriptionId%3DAKIAJCAHSSNNKIXIAI2Q%26tag%3Denomotodev-22%26linkCode%3Dxm2%26camp%3D2025%26creative%3D165953%26creativeASIN%3D4774174416&#34; name=&#34;backport&#34; target=&#34;_blank&#34;&gt;
        &lt;i class=&#34;fa fa-amazon&#34; aria-hidden=&#34;true&#34;&gt;&lt;/i&gt;&amp;nbsp;Amazonで詳細を見る
      &lt;/a&gt;
    &lt;/p&gt;
  &lt;/div&gt;
  &lt;br style=&#34;clear: both;&#34;/&gt;
&lt;/div&gt;
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>【 php-fpm 編】Mac に Docker インストールしてみた</title>
      <link>http://enomotodev.github.io/post/docker-mac-phpfpm/</link>
      <pubDate>Sun, 24 Apr 2016 02:06:12 +0900</pubDate>
      <author>enomoto.dev@gmail.com (Takafumi Enomoto)</author>
      <guid>http://enomotodev.github.io/post/docker-mac-phpfpm/</guid>
      <description>

&lt;p&gt;前回の『&lt;a href=&#34;http://enomotodev.github.io/post/docker-mac-nginx/&#34;&gt;【 Nginx 編】Mac に Docker インストールしてみた&lt;/a&gt;』の続きです。&lt;/p&gt;

&lt;h2 id=&#34;コンテナを削除する&#34;&gt;コンテナを削除する&lt;/h2&gt;

&lt;p&gt;Nginx のコンテナなどが稼働していると思うので、一旦全て削除します&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ docker rm -f `docker ps -a -q`
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;php-fpm-のイメージを-pull-する&#34;&gt;php-fpm のイメージを pull する&lt;/h2&gt;

&lt;p&gt;公式の php-fpm のイメージを pull します&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ docker pull php:fpm
...（略）
Status: Downloaded newer image for php:fpm
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;php-fpm-のコンテナを起動する&#34;&gt;php-fpm のコンテナを起動する&lt;/h2&gt;

&lt;p&gt;最初に Document Root に配置する PHP ファイルを作成します&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;~/docker/www/index.php&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;?php
    phpinfo();
?&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;PHP ファイルの準備ができたら php-fpm のコンテナを起動しましょう&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ docker run --name fpm -p 9000:9000 -v /Users/enomotodev/docker/www:/var/www/html -d php:fpm
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;--name&lt;/code&gt; オプションで &lt;code&gt;fpm&lt;/code&gt; と指定することによって、&lt;code&gt;fpm&lt;/code&gt; という名前でコンテナを起動しています&lt;/p&gt;

&lt;p&gt;続けて、Nginx のコンテナを起動するのですが、先に前回作成した conf ファイルを編集しましょう&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;~/docker/nginx/nginx.conf&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code&gt;server {
    listen 8080;

    root /var/www/html;
    index index.php index.html index.htm;

    location / {
        try_files $uri $uri/ /index.php?$query_string;
    }

    location ~ \.php$ {
        fastcgi_pass fpm:9000;
        fastcgi_index index.php;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;

        include fastcgi_params;
    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;conf ファイルの準備ができたので、Nginx のコンテナを起動します&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ docker run --name nginx -p 9090:8080 -v /Users/enomotodev/docker/nginx/nginx.conf:/etc/nginx/conf.d/nginx.conf --link fpm -d nginx
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;--link&lt;/code&gt; オプションで &lt;code&gt;fpm&lt;/code&gt; を指定することによって、Nginx コンテナから php-fpm コンテナへの接続ができるようになります&lt;/p&gt;

&lt;p&gt;つまり、conf ファイルの &lt;code&gt;fastcgi_pass fpm:9000;&lt;/code&gt; の部分は php-fpm コンテナの &lt;code&gt;9000&lt;/code&gt; 番ポートに接続するという意味になります&lt;/p&gt;

&lt;p&gt;それでは、ブラウザで確認してみましょう&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://enomotodev.github.io/images/docker-phpfpm.png&#34; alt=&#34;Docker php-fpm ブラウザ確認&#34; class=&#34;image&#34; /&gt;&lt;/p&gt;

&lt;p&gt;phpinfo が表示されました！&lt;/p&gt;

&lt;h2 id=&#34;まとめ&#34;&gt;まとめ&lt;/h2&gt;

&lt;p&gt;Nginx と PHP の連携ができたので、次は Database との連携も行い、Docker で PHP 開発環境を構築したいと思います&lt;/p&gt;

&lt;h2 id=&#34;つづき&#34;&gt;つづき&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://enomotodev.github.io/post/docker-mac-composer/&#34;&gt;【 Composer 編】Mac に Docker インストールしてみた&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;


&lt;div class=&#34;amazon-shortcode-box&#34;&gt;
  &lt;div class=&#34;amazon-shortcode-image&#34;&gt;
    &lt;a href=&#34;https://www.amazon.co.jp/%E3%83%97%E3%83%AD%E3%82%B0%E3%83%A9%E3%83%9E%E3%81%AE%E3%81%9F%E3%82%81%E3%81%AEDocker%E6%95%99%E7%A7%91%E6%9B%B8-%E3%82%A4%E3%83%B3%E3%83%95%E3%83%A9%E3%81%AE%E5%9F%BA%E7%A4%8E%E7%9F%A5%E8%AD%98-%E3%82%B3%E3%83%BC%E3%83%89%E3%81%AB%E3%82%88%E3%82%8B%E7%92%B0%E5%A2%83%E6%A7%8B%E7%AF%89%E3%81%AE%E8%87%AA%E5%8B%95%E5%8C%96-%E9%98%BF%E4%BD%90-%E5%BF%97%E4%BF%9D/dp/479814102X%3FSubscriptionId%3DAKIAJCAHSSNNKIXIAI2Q%26tag%3Denomotodev-22%26linkCode%3Dxm2%26camp%3D2025%26creative%3D165953%26creativeASIN%3D479814102X&#34; name=&#34;amazon-shortcode&#34; target=&#34;_blank&#34;&gt;
      &lt;img src=&#34;https://images-fe.ssl-images-amazon.com/images/I/51G1TiUZprL._SL160_.jpg&#34; alt=&#34;プログラマのためのDocker教科書 インフラの基礎知識&amp;amp;コードによる環境構築の自動化&#34; /&gt;
    &lt;/a&gt;
  &lt;/div&gt;
  &lt;div class=&#34;amazon-shortcode-info&#34;&gt;
    &lt;p class=&#34;amazon-shortcode-title&#34;&gt;
      &lt;a href=&#34;https://www.amazon.co.jp/%E3%83%97%E3%83%AD%E3%82%B0%E3%83%A9%E3%83%9E%E3%81%AE%E3%81%9F%E3%82%81%E3%81%AEDocker%E6%95%99%E7%A7%91%E6%9B%B8-%E3%82%A4%E3%83%B3%E3%83%95%E3%83%A9%E3%81%AE%E5%9F%BA%E7%A4%8E%E7%9F%A5%E8%AD%98-%E3%82%B3%E3%83%BC%E3%83%89%E3%81%AB%E3%82%88%E3%82%8B%E7%92%B0%E5%A2%83%E6%A7%8B%E7%AF%89%E3%81%AE%E8%87%AA%E5%8B%95%E5%8C%96-%E9%98%BF%E4%BD%90-%E5%BF%97%E4%BF%9D/dp/479814102X%3FSubscriptionId%3DAKIAJCAHSSNNKIXIAI2Q%26tag%3Denomotodev-22%26linkCode%3Dxm2%26camp%3D2025%26creative%3D165953%26creativeASIN%3D479814102X&#34; name=&#34;amazon-shortcode&#34; target=&#34;_blank&#34;&gt;
        プログラマのためのDocker教科書 インフラの基礎知識&amp;amp;コードによる環境構築の自動化
      &lt;/a&gt;
    &lt;/p&gt;
    
      &lt;p class=&#34;amazon-shortcode-author&#34;&gt;阿佐 志保&lt;/p&gt;
    
    &lt;div class=&#34;amazon-shortcode-detail&#34;&gt;
      
        &lt;p&gt;出版社：翔泳社&lt;/p&gt;
      
      
        &lt;p&gt;発売日：2015-11-20&lt;/p&gt;
      
    &lt;/div&gt;
    &lt;p&gt;
      &lt;a href=&#34;https://www.amazon.co.jp/%E3%83%97%E3%83%AD%E3%82%B0%E3%83%A9%E3%83%9E%E3%81%AE%E3%81%9F%E3%82%81%E3%81%AEDocker%E6%95%99%E7%A7%91%E6%9B%B8-%E3%82%A4%E3%83%B3%E3%83%95%E3%83%A9%E3%81%AE%E5%9F%BA%E7%A4%8E%E7%9F%A5%E8%AD%98-%E3%82%B3%E3%83%BC%E3%83%89%E3%81%AB%E3%82%88%E3%82%8B%E7%92%B0%E5%A2%83%E6%A7%8B%E7%AF%89%E3%81%AE%E8%87%AA%E5%8B%95%E5%8C%96-%E9%98%BF%E4%BD%90-%E5%BF%97%E4%BF%9D/dp/479814102X%3FSubscriptionId%3DAKIAJCAHSSNNKIXIAI2Q%26tag%3Denomotodev-22%26linkCode%3Dxm2%26camp%3D2025%26creative%3D165953%26creativeASIN%3D479814102X&#34; name=&#34;backport&#34; target=&#34;_blank&#34;&gt;
        &lt;i class=&#34;fa fa-amazon&#34; aria-hidden=&#34;true&#34;&gt;&lt;/i&gt;&amp;nbsp;Amazonで詳細を見る
      &lt;/a&gt;
    &lt;/p&gt;
  &lt;/div&gt;
  &lt;br style=&#34;clear: both;&#34;/&gt;
&lt;/div&gt;




&lt;div class=&#34;amazon-shortcode-box&#34;&gt;
  &lt;div class=&#34;amazon-shortcode-image&#34;&gt;
    &lt;a href=&#34;https://www.amazon.co.jp/Docker%E3%82%A8%E3%82%AD%E3%82%B9%E3%83%91%E3%83%BC%E3%83%88%E9%A4%8A%E6%88%90%E8%AA%AD%E6%9C%AC%EF%BC%BB%E6%B4%BB%E7%94%A8%E3%81%AE%E5%9F%BA%E7%A4%8E%E3%81%A8%E5%AE%9F%E8%B7%B5%E3%83%8E%E3%82%A6%E3%83%8F%E3%82%A6%E6%BA%80%E8%BC%89%EF%BC%81%EF%BC%BD-Software-Design-plus-%E6%9D%89%E5%B1%B1/dp/4774174416%3FSubscriptionId%3DAKIAJCAHSSNNKIXIAI2Q%26tag%3Denomotodev-22%26linkCode%3Dxm2%26camp%3D2025%26creative%3D165953%26creativeASIN%3D4774174416&#34; name=&#34;amazon-shortcode&#34; target=&#34;_blank&#34;&gt;
      &lt;img src=&#34;https://images-fe.ssl-images-amazon.com/images/I/51gFcibBx-L._SL160_.jpg&#34; alt=&#34;Dockerエキスパート養成読本［活用の基礎と実践ノウハウ満載！］ (Software Design plus)&#34; /&gt;
    &lt;/a&gt;
  &lt;/div&gt;
  &lt;div class=&#34;amazon-shortcode-info&#34;&gt;
    &lt;p class=&#34;amazon-shortcode-title&#34;&gt;
      &lt;a href=&#34;https://www.amazon.co.jp/Docker%E3%82%A8%E3%82%AD%E3%82%B9%E3%83%91%E3%83%BC%E3%83%88%E9%A4%8A%E6%88%90%E8%AA%AD%E6%9C%AC%EF%BC%BB%E6%B4%BB%E7%94%A8%E3%81%AE%E5%9F%BA%E7%A4%8E%E3%81%A8%E5%AE%9F%E8%B7%B5%E3%83%8E%E3%82%A6%E3%83%8F%E3%82%A6%E6%BA%80%E8%BC%89%EF%BC%81%EF%BC%BD-Software-Design-plus-%E6%9D%89%E5%B1%B1/dp/4774174416%3FSubscriptionId%3DAKIAJCAHSSNNKIXIAI2Q%26tag%3Denomotodev-22%26linkCode%3Dxm2%26camp%3D2025%26creative%3D165953%26creativeASIN%3D4774174416&#34; name=&#34;amazon-shortcode&#34; target=&#34;_blank&#34;&gt;
        Dockerエキスパート養成読本［活用の基礎と実践ノウハウ満載！］ (Software Design plus)
      &lt;/a&gt;
    &lt;/p&gt;
    
      &lt;p class=&#34;amazon-shortcode-author&#34;&gt;杉山 貴章&lt;/p&gt;
    
    &lt;div class=&#34;amazon-shortcode-detail&#34;&gt;
      
        &lt;p&gt;出版社：技術評論社&lt;/p&gt;
      
      
        &lt;p&gt;発売日：2015-06-18&lt;/p&gt;
      
    &lt;/div&gt;
    &lt;p&gt;
      &lt;a href=&#34;https://www.amazon.co.jp/Docker%E3%82%A8%E3%82%AD%E3%82%B9%E3%83%91%E3%83%BC%E3%83%88%E9%A4%8A%E6%88%90%E8%AA%AD%E6%9C%AC%EF%BC%BB%E6%B4%BB%E7%94%A8%E3%81%AE%E5%9F%BA%E7%A4%8E%E3%81%A8%E5%AE%9F%E8%B7%B5%E3%83%8E%E3%82%A6%E3%83%8F%E3%82%A6%E6%BA%80%E8%BC%89%EF%BC%81%EF%BC%BD-Software-Design-plus-%E6%9D%89%E5%B1%B1/dp/4774174416%3FSubscriptionId%3DAKIAJCAHSSNNKIXIAI2Q%26tag%3Denomotodev-22%26linkCode%3Dxm2%26camp%3D2025%26creative%3D165953%26creativeASIN%3D4774174416&#34; name=&#34;backport&#34; target=&#34;_blank&#34;&gt;
        &lt;i class=&#34;fa fa-amazon&#34; aria-hidden=&#34;true&#34;&gt;&lt;/i&gt;&amp;nbsp;Amazonで詳細を見る
      &lt;/a&gt;
    &lt;/p&gt;
  &lt;/div&gt;
  &lt;br style=&#34;clear: both;&#34;/&gt;
&lt;/div&gt;
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>【 Nginx 編】Mac に Docker インストールしてみた</title>
      <link>http://enomotodev.github.io/post/docker-mac-nginx/</link>
      <pubDate>Mon, 04 Apr 2016 23:33:12 +0900</pubDate>
      <author>enomoto.dev@gmail.com (Takafumi Enomoto)</author>
      <guid>http://enomotodev.github.io/post/docker-mac-nginx/</guid>
      <description>

&lt;p&gt;前回の『&lt;a href=&#34;http://enomotodev.github.io/post/install-docker-mac/&#34;&gt;Mac に Docker インストールしてみた&lt;/a&gt;』の続きです。&lt;/p&gt;

&lt;p&gt;実際に Nginx + PHP + MySQL 環境を構築するにあたって、今回は Nginx コンテナを起動させて、静的コンテンツの表示までを行いたいと思います。&lt;/p&gt;

&lt;h2 id=&#34;docker-machine-の起動&#34;&gt;Docker Machine の起動&lt;/h2&gt;

&lt;p&gt;前回から、PC をシャットダウンしたり、再起動している場合は、もう一度 Docker Machine を起動させなければいけないので、下記のコマンドで起動させてください。（それ以外の方は次の『Nginx コンテナを起動させる』から読んでください）&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ docker-machine start dev-machine
Starting &amp;quot;dev-machine&amp;quot;...
(dev-machine) Waiting for an IP...
Machine &amp;quot;dev-machine&amp;quot; was started.
Waiting for SSH to be available...
Detecting the provisioner...
Started machines may have new IP addresses. You may need to re-run the `docker-machine env` command.
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;前回と同じ手順を踏んで、Docker Machine に接続できるようにしていきます。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ docker-machine env dev-machine
export DOCKER_TLS_VERIFY=&amp;quot;1&amp;quot;
export DOCKER_HOST=&amp;quot;tcp://192.168.99.101:2376&amp;quot;
export DOCKER_CERT_PATH=&amp;quot;/Users/enomotodev/.docker/machine/machines/dev-machine&amp;quot;
export DOCKER_MACHINE_NAME=&amp;quot;dev-machine&amp;quot;
# Run this command to configure your shell:
# eval $(docker-machine env dev-machine)
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;$ eval $(docker-machine env dev-machine)
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;$ docker images
REPOSITORY          TAG                 IMAGE ID            CREATED             SIZE
ubuntu              latest              97434d46f197        2 weeks ago         188 MB
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;無事 &lt;code&gt;docker images&lt;/code&gt; コマンドが実行できました。&lt;/p&gt;

&lt;h2 id=&#34;nginx-コンテナを起動させる&#34;&gt;Nginx コンテナを起動させる&lt;/h2&gt;

&lt;p&gt;まずは &lt;code&gt;docker pull&lt;/code&gt; コマンドを実行して、Nginx のイメージを取得します。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ docker pull nginx:latest
latest: Pulling from library/nginx
fdd5d7827f33: Pull complete
a3ed95caeb02: Pull complete
716f7a5f3082: Pull complete
7b10f03a0309: Pull complete
Digest: sha256:f6a001272d5d324c4c9f3f183e1b69e9e0ff12debeb7a092730d638c33e0de3e
Status: Downloaded newer image for nginx:latest
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;docker images&lt;/code&gt; コマンドで確認します。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ docker images
REPOSITORY          TAG                 IMAGE ID            CREATED             SIZE
ubuntu              latest              97434d46f197        2 weeks ago         188 MB
nginx               latest              af4b3d7d5401        3 weeks ago         190.5 MB
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;docker run&lt;/code&gt; コマンドで Nginx のコンテナが起動するのですが、先に Nginx の設定ファイルと Document Root に置く HTML ファイルを準備します。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;~/docker/nginx/nginx.conf&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code&gt;server {
    listen 8080 default_server;

    root /var/www;
    index index.html index.htm;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;~/docker/www/index.html&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;html&amp;gt;
&amp;lt;body&amp;gt;
&amp;lt;h1&amp;gt;Hello Docker!&amp;lt;/h1&amp;gt;
&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;最低限の設定ですが、必要なファイルが準備できたので、&lt;code&gt;docker run&lt;/code&gt; コマンドで Nginx コンテナを起動します。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ docker run -p 9090:8080 -v /Users/enomotodev/docker/nginx/nginx.conf:/etc/nginx/conf.d/nginx.conf -v /Users/enomotodev/docker/www:/var/www -d nginx
0902e290559b4a054d72b4cf2615334079cfa879df1cc35d9655d0f0e217c462
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;ここで &lt;code&gt;docker run&lt;/code&gt; コマンドのオプションを少し確認したいと思います。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-p&lt;/code&gt; オプション&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;code&gt;-p&lt;/code&gt; オプションでポートマッピングの設定ができます。&lt;/p&gt;

&lt;p&gt;『Mac -&amp;gt; Docker Machine -&amp;gt; Nginx コンテナ』という流れで Nginx に接続していて、今回は &lt;code&gt;9090:8080&lt;/code&gt; と設定しているので、『Mac -&amp;gt; Docker Machine』の接続に &lt;code&gt;9090&lt;/code&gt; ポート、『Docker Machine -&amp;gt; Nginx コンテナ』の接続に &lt;code&gt;8080&lt;/code&gt; ポートを使用するという設定になっています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-v&lt;/code&gt; オプション&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;code&gt;-v&lt;/code&gt;　オプションでは、Docker Machine と Nginx コンテナ間で共有するファイル・ディレクトリを指定できます。&lt;/p&gt;

&lt;p&gt;Docker Machine には、Mac の &lt;code&gt;/Users&lt;/code&gt; ディレクトリがマウントされているので、例えば Mac 上の &lt;code&gt;/Users/enomotodev/hoge&lt;/code&gt; ディレクトリは、Docker Machine 上でも &lt;code&gt;/Users/enomotodev/hoge&lt;/code&gt; ディレクトリになります。&lt;/p&gt;

&lt;p&gt;&lt;code&gt;-v foo:bar&lt;/code&gt; と書くと、Docker Machine の &lt;code&gt;foo&lt;/code&gt; ディレクトリを Nginx コンテナの &lt;code&gt;bar&lt;/code&gt; にマウントさせることができ、それによってファイルやディレクトリを共有できます。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-d&lt;/code&gt; オプション&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;code&gt;-d&lt;/code&gt; オプションを使用するとコンテナをバックグラウンドモードで起動することができます。&lt;/p&gt;

&lt;h2 id=&#34;nginx-コンテナの起動確認&#34;&gt;Nginx コンテナの起動確認&lt;/h2&gt;

&lt;p&gt;Nginx コンテナを起動させたので Docker Machine の IP を確認して、接続してみましょう。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ docker-machine ip dev-machine
192.168.99.101
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Docker Machine の IP が &lt;code&gt;192.168.99.101&lt;/code&gt; とわかったので、Nginx コンテナを起動するときに指定した &lt;code&gt;9090&lt;/code&gt; ポートで接続してみます。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;http://192.168.99.101:9090&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&#34;http://enomotodev.github.io/images/docker-nginx.png&#34; alt=&#34;Docker Nginx ブラウザ確認&#34; class=&#34;image&#34; /&gt;&lt;/p&gt;

&lt;p&gt;無事に表示されました！&lt;/p&gt;

&lt;h2 id=&#34;まとめ&#34;&gt;まとめ&lt;/h2&gt;

&lt;p&gt;Nginx コンテナを起動し、静的コンテンツの表示までできました。&lt;/p&gt;

&lt;p&gt;次回は PHP と連携して、動的なコンテンツの表示も行いたいと思います。&lt;/p&gt;

&lt;h2 id=&#34;つづき&#34;&gt;つづき&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://enomotodev.github.io/post/docker-mac-phpfpm/&#34;&gt;【 php-fpm 編】Mac に Docker インストールしてみた&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://enomotodev.github.io/post/docker-mac-composer/&#34;&gt;【 Composer 編】Mac に Docker インストールしてみた&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;


&lt;div class=&#34;amazon-shortcode-box&#34;&gt;
  &lt;div class=&#34;amazon-shortcode-image&#34;&gt;
    &lt;a href=&#34;https://www.amazon.co.jp/%E3%83%97%E3%83%AD%E3%82%B0%E3%83%A9%E3%83%9E%E3%81%AE%E3%81%9F%E3%82%81%E3%81%AEDocker%E6%95%99%E7%A7%91%E6%9B%B8-%E3%82%A4%E3%83%B3%E3%83%95%E3%83%A9%E3%81%AE%E5%9F%BA%E7%A4%8E%E7%9F%A5%E8%AD%98-%E3%82%B3%E3%83%BC%E3%83%89%E3%81%AB%E3%82%88%E3%82%8B%E7%92%B0%E5%A2%83%E6%A7%8B%E7%AF%89%E3%81%AE%E8%87%AA%E5%8B%95%E5%8C%96-%E9%98%BF%E4%BD%90-%E5%BF%97%E4%BF%9D/dp/479814102X%3FSubscriptionId%3DAKIAJCAHSSNNKIXIAI2Q%26tag%3Denomotodev-22%26linkCode%3Dxm2%26camp%3D2025%26creative%3D165953%26creativeASIN%3D479814102X&#34; name=&#34;amazon-shortcode&#34; target=&#34;_blank&#34;&gt;
      &lt;img src=&#34;https://images-fe.ssl-images-amazon.com/images/I/51G1TiUZprL._SL160_.jpg&#34; alt=&#34;プログラマのためのDocker教科書 インフラの基礎知識&amp;amp;コードによる環境構築の自動化&#34; /&gt;
    &lt;/a&gt;
  &lt;/div&gt;
  &lt;div class=&#34;amazon-shortcode-info&#34;&gt;
    &lt;p class=&#34;amazon-shortcode-title&#34;&gt;
      &lt;a href=&#34;https://www.amazon.co.jp/%E3%83%97%E3%83%AD%E3%82%B0%E3%83%A9%E3%83%9E%E3%81%AE%E3%81%9F%E3%82%81%E3%81%AEDocker%E6%95%99%E7%A7%91%E6%9B%B8-%E3%82%A4%E3%83%B3%E3%83%95%E3%83%A9%E3%81%AE%E5%9F%BA%E7%A4%8E%E7%9F%A5%E8%AD%98-%E3%82%B3%E3%83%BC%E3%83%89%E3%81%AB%E3%82%88%E3%82%8B%E7%92%B0%E5%A2%83%E6%A7%8B%E7%AF%89%E3%81%AE%E8%87%AA%E5%8B%95%E5%8C%96-%E9%98%BF%E4%BD%90-%E5%BF%97%E4%BF%9D/dp/479814102X%3FSubscriptionId%3DAKIAJCAHSSNNKIXIAI2Q%26tag%3Denomotodev-22%26linkCode%3Dxm2%26camp%3D2025%26creative%3D165953%26creativeASIN%3D479814102X&#34; name=&#34;amazon-shortcode&#34; target=&#34;_blank&#34;&gt;
        プログラマのためのDocker教科書 インフラの基礎知識&amp;amp;コードによる環境構築の自動化
      &lt;/a&gt;
    &lt;/p&gt;
    
      &lt;p class=&#34;amazon-shortcode-author&#34;&gt;阿佐 志保&lt;/p&gt;
    
    &lt;div class=&#34;amazon-shortcode-detail&#34;&gt;
      
        &lt;p&gt;出版社：翔泳社&lt;/p&gt;
      
      
        &lt;p&gt;発売日：2015-11-20&lt;/p&gt;
      
    &lt;/div&gt;
    &lt;p&gt;
      &lt;a href=&#34;https://www.amazon.co.jp/%E3%83%97%E3%83%AD%E3%82%B0%E3%83%A9%E3%83%9E%E3%81%AE%E3%81%9F%E3%82%81%E3%81%AEDocker%E6%95%99%E7%A7%91%E6%9B%B8-%E3%82%A4%E3%83%B3%E3%83%95%E3%83%A9%E3%81%AE%E5%9F%BA%E7%A4%8E%E7%9F%A5%E8%AD%98-%E3%82%B3%E3%83%BC%E3%83%89%E3%81%AB%E3%82%88%E3%82%8B%E7%92%B0%E5%A2%83%E6%A7%8B%E7%AF%89%E3%81%AE%E8%87%AA%E5%8B%95%E5%8C%96-%E9%98%BF%E4%BD%90-%E5%BF%97%E4%BF%9D/dp/479814102X%3FSubscriptionId%3DAKIAJCAHSSNNKIXIAI2Q%26tag%3Denomotodev-22%26linkCode%3Dxm2%26camp%3D2025%26creative%3D165953%26creativeASIN%3D479814102X&#34; name=&#34;backport&#34; target=&#34;_blank&#34;&gt;
        &lt;i class=&#34;fa fa-amazon&#34; aria-hidden=&#34;true&#34;&gt;&lt;/i&gt;&amp;nbsp;Amazonで詳細を見る
      &lt;/a&gt;
    &lt;/p&gt;
  &lt;/div&gt;
  &lt;br style=&#34;clear: both;&#34;/&gt;
&lt;/div&gt;




&lt;div class=&#34;amazon-shortcode-box&#34;&gt;
  &lt;div class=&#34;amazon-shortcode-image&#34;&gt;
    &lt;a href=&#34;https://www.amazon.co.jp/Docker%E3%82%A8%E3%82%AD%E3%82%B9%E3%83%91%E3%83%BC%E3%83%88%E9%A4%8A%E6%88%90%E8%AA%AD%E6%9C%AC%EF%BC%BB%E6%B4%BB%E7%94%A8%E3%81%AE%E5%9F%BA%E7%A4%8E%E3%81%A8%E5%AE%9F%E8%B7%B5%E3%83%8E%E3%82%A6%E3%83%8F%E3%82%A6%E6%BA%80%E8%BC%89%EF%BC%81%EF%BC%BD-Software-Design-plus-%E6%9D%89%E5%B1%B1/dp/4774174416%3FSubscriptionId%3DAKIAJCAHSSNNKIXIAI2Q%26tag%3Denomotodev-22%26linkCode%3Dxm2%26camp%3D2025%26creative%3D165953%26creativeASIN%3D4774174416&#34; name=&#34;amazon-shortcode&#34; target=&#34;_blank&#34;&gt;
      &lt;img src=&#34;https://images-fe.ssl-images-amazon.com/images/I/51gFcibBx-L._SL160_.jpg&#34; alt=&#34;Dockerエキスパート養成読本［活用の基礎と実践ノウハウ満載！］ (Software Design plus)&#34; /&gt;
    &lt;/a&gt;
  &lt;/div&gt;
  &lt;div class=&#34;amazon-shortcode-info&#34;&gt;
    &lt;p class=&#34;amazon-shortcode-title&#34;&gt;
      &lt;a href=&#34;https://www.amazon.co.jp/Docker%E3%82%A8%E3%82%AD%E3%82%B9%E3%83%91%E3%83%BC%E3%83%88%E9%A4%8A%E6%88%90%E8%AA%AD%E6%9C%AC%EF%BC%BB%E6%B4%BB%E7%94%A8%E3%81%AE%E5%9F%BA%E7%A4%8E%E3%81%A8%E5%AE%9F%E8%B7%B5%E3%83%8E%E3%82%A6%E3%83%8F%E3%82%A6%E6%BA%80%E8%BC%89%EF%BC%81%EF%BC%BD-Software-Design-plus-%E6%9D%89%E5%B1%B1/dp/4774174416%3FSubscriptionId%3DAKIAJCAHSSNNKIXIAI2Q%26tag%3Denomotodev-22%26linkCode%3Dxm2%26camp%3D2025%26creative%3D165953%26creativeASIN%3D4774174416&#34; name=&#34;amazon-shortcode&#34; target=&#34;_blank&#34;&gt;
        Dockerエキスパート養成読本［活用の基礎と実践ノウハウ満載！］ (Software Design plus)
      &lt;/a&gt;
    &lt;/p&gt;
    
      &lt;p class=&#34;amazon-shortcode-author&#34;&gt;杉山 貴章&lt;/p&gt;
    
    &lt;div class=&#34;amazon-shortcode-detail&#34;&gt;
      
        &lt;p&gt;出版社：技術評論社&lt;/p&gt;
      
      
        &lt;p&gt;発売日：2015-06-18&lt;/p&gt;
      
    &lt;/div&gt;
    &lt;p&gt;
      &lt;a href=&#34;https://www.amazon.co.jp/Docker%E3%82%A8%E3%82%AD%E3%82%B9%E3%83%91%E3%83%BC%E3%83%88%E9%A4%8A%E6%88%90%E8%AA%AD%E6%9C%AC%EF%BC%BB%E6%B4%BB%E7%94%A8%E3%81%AE%E5%9F%BA%E7%A4%8E%E3%81%A8%E5%AE%9F%E8%B7%B5%E3%83%8E%E3%82%A6%E3%83%8F%E3%82%A6%E6%BA%80%E8%BC%89%EF%BC%81%EF%BC%BD-Software-Design-plus-%E6%9D%89%E5%B1%B1/dp/4774174416%3FSubscriptionId%3DAKIAJCAHSSNNKIXIAI2Q%26tag%3Denomotodev-22%26linkCode%3Dxm2%26camp%3D2025%26creative%3D165953%26creativeASIN%3D4774174416&#34; name=&#34;backport&#34; target=&#34;_blank&#34;&gt;
        &lt;i class=&#34;fa fa-amazon&#34; aria-hidden=&#34;true&#34;&gt;&lt;/i&gt;&amp;nbsp;Amazonで詳細を見る
      &lt;/a&gt;
    &lt;/p&gt;
  &lt;/div&gt;
  &lt;br style=&#34;clear: both;&#34;/&gt;
&lt;/div&gt;
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Mac に Docker インストールしてみた</title>
      <link>http://enomotodev.github.io/post/install-docker-mac/</link>
      <pubDate>Mon, 28 Mar 2016 12:48:00 +0900</pubDate>
      <author>enomoto.dev@gmail.com (Takafumi Enomoto)</author>
      <guid>http://enomotodev.github.io/post/install-docker-mac/</guid>
      <description>

&lt;h2 id=&#34;docker-docker-machine-のインストール&#34;&gt;Docker + Docker Machine のインストール&lt;/h2&gt;

&lt;p&gt;まずは、Docker 本体と Docker Machine をインストールします。&lt;/p&gt;

&lt;p&gt;Mac だと Docker を直接的に実行できないのですが、Docker Machine を使用すると、一旦VM上で CoreOS や boot2docker を実行して、その上で簡単に Docker を実行できるようになります。&lt;/p&gt;

&lt;p&gt;インストール自体はどちらも Homebrew で簡単にインストールすることができます。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ brew install docker docker-machine
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;machine-の作成&#34;&gt;Machine の作成&lt;/h2&gt;

&lt;p&gt;docker-machine コマンドで新しく Machine を作成します。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ docker-machine create -d virtualbox dev-machine
・・・（省略）
Setting Docker configuration on the remote daemon...
Checking connection to Docker...
Docker is up and running!
To see how to connect your Docker Client to the Docker Engine running on this virtual machine, run: docker-machine env dev-machine
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;上記の &lt;code&gt;dev-machine&lt;/code&gt; の部分は Machine の名前になるので、好きな名前をつけてかまいません。&lt;/p&gt;

&lt;p&gt;出力の最終行にVM上の Docker Machine に接続するために &lt;code&gt;docker-machine env dev-machine&lt;/code&gt; を実行してくださいと書かれているので、これを実行します。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ docker-machine env dev-machine
export DOCKER_TLS_VERIFY=&amp;quot;1&amp;quot;
export DOCKER_HOST=&amp;quot;tcp://192.168.99.100:2376&amp;quot;
export DOCKER_CERT_PATH=&amp;quot;/path/to/.docker/machine/machines/dev-machine&amp;quot;
export DOCKER_MACHINE_NAME=&amp;quot;dev-machine&amp;quot;
# Run this command to configure your shell:
# eval $(docker-machine env dev-machine)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;docker-machine env dev-machine&lt;/code&gt; を実行すると、環境によって多少異なりますが、このようなかたちで色々表示されるかと思います。&lt;/p&gt;

&lt;p&gt;これは要するに最終行の &lt;code&gt;eval $(docker-machine env dev-machine)&lt;/code&gt; というコマンドを実行すると、Docker に接続するための環境変数が設定されるということです。&lt;/p&gt;

&lt;p&gt;それでは、早速コマンドを実行してみましょう。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ eval $(docker-machine env dev-machine)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;特に何も出力されませんが、これで Docker Machine に接続できるようになりました。&lt;/p&gt;

&lt;h2 id=&#34;docker-machine-に接続する&#34;&gt;Docker Machine に接続する&lt;/h2&gt;

&lt;p&gt;Docker Machine に接続してみます。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ docker-machine ssh dev-machine
                        ##         .
                  ## ## ##        ==
               ## ## ## ## ##    ===
           /&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;\___/ ===
      ~~~ {~~ ~~~~ ~~~ ~~~~ ~~~ ~ /  ===- ~~~
           \______ o           __/
             \    \         __/
              \____\_______/
 _                 _   ____     _            _
| |__   ___   ___ | |_|___ \ __| | ___   ___| | _____ _ __
| &#39;_ \ / _ \ / _ \| __| __) / _` |/ _ \ / __| |/ / _ \ &#39;__|
| |_) | (_) | (_) | |_ / __/ (_| | (_) | (__|   &amp;lt;  __/ |
|_.__/ \___/ \___/ \__|_____\__,_|\___/ \___|_|\_\___|_|
Boot2Docker version 1.10.3, build master : 625117e - Thu Mar 10 22:09:02 UTC 2016
Docker version 1.10.3, build 20f81dd
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Docker Machine に接続することができたので、&lt;code&gt;docker pull&lt;/code&gt; コマンドを実行して、Ubuntu のイメージを取得します。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ docker pull ubuntu:latest
latest: Pulling from library/ubuntu
203137e8afd5: Pull complete
2ff1bbbe9310: Pull complete
933ae2486129: Pull complete
a3ed95caeb02: Pull complete
Digest: sha256:1bea66e185d3464fec1abda32ffaf2a11de69833cfcf81bd2b9a5be147776814
Status: Downloaded newer image for ubuntu:latest
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;docker images&lt;/code&gt; コマンドを実行すると Docker Machine 内のイメージ一覧が見れるので、先ほど取得した Ubuntu のイメージがきちんと表示されるか確認してみましょう。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ docker images
REPOSITORY          TAG                 IMAGE ID            CREATED             SIZE
ubuntu              latest              97434d46f197        3 days ago          188 MB
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;問題なく Ubuntu のイメージが取得できたのが確認できました。&lt;/p&gt;

&lt;h2 id=&#34;mac-から-docker-コマンド実行&#34;&gt;Mac から Docker コマンド実行&lt;/h2&gt;

&lt;p&gt;ここまでは Docker Machine 内で docker コマンドを実行していたので、exit 等して Mac に戻りましょう。&lt;/p&gt;

&lt;p&gt;少し前に &lt;code&gt;eval $(docker-machine env dev-machine)&lt;/code&gt; を実行しましたが、これを実行していれば Mac からも docker コマンドが実行できるので、Docker Machine 内のイメージ一覧を表示させて、docker コマンドがきちんと実行できるか確認します。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ docker images
REPOSITORY          TAG                 IMAGE ID            CREATED             SIZE
ubuntu              latest              97434d46f197        3 days ago          188 MB
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Mac からも docker コマンドが実行できました！&lt;/p&gt;

&lt;h2 id=&#34;まとめ&#34;&gt;まとめ&lt;/h2&gt;

&lt;p&gt;これで Mac に docker の環境を整えることができました。&lt;/p&gt;

&lt;p&gt;ですが、このままでは docker をどのように使うのかイメージがつきづらいと思いますので、次回以降で PHP の開発環境を実際に構築していきたいと思います。&lt;/p&gt;

&lt;h2 id=&#34;つづき&#34;&gt;つづき&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://enomotodev.github.io/post/docker-mac-nginx/&#34;&gt;【 Nginx 編】Mac に Docker インストールしてみた&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://enomotodev.github.io/post/docker-mac-phpfpm/&#34;&gt;【 php-fpm 編】Mac に Docker インストールしてみた&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://enomotodev.github.io/post/docker-mac-composer/&#34;&gt;【 Composer 編】Mac に Docker インストールしてみた&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;


&lt;div class=&#34;amazon-shortcode-box&#34;&gt;
  &lt;div class=&#34;amazon-shortcode-image&#34;&gt;
    &lt;a href=&#34;https://www.amazon.co.jp/%E3%83%97%E3%83%AD%E3%82%B0%E3%83%A9%E3%83%9E%E3%81%AE%E3%81%9F%E3%82%81%E3%81%AEDocker%E6%95%99%E7%A7%91%E6%9B%B8-%E3%82%A4%E3%83%B3%E3%83%95%E3%83%A9%E3%81%AE%E5%9F%BA%E7%A4%8E%E7%9F%A5%E8%AD%98-%E3%82%B3%E3%83%BC%E3%83%89%E3%81%AB%E3%82%88%E3%82%8B%E7%92%B0%E5%A2%83%E6%A7%8B%E7%AF%89%E3%81%AE%E8%87%AA%E5%8B%95%E5%8C%96-%E9%98%BF%E4%BD%90-%E5%BF%97%E4%BF%9D/dp/479814102X%3FSubscriptionId%3DAKIAJCAHSSNNKIXIAI2Q%26tag%3Denomotodev-22%26linkCode%3Dxm2%26camp%3D2025%26creative%3D165953%26creativeASIN%3D479814102X&#34; name=&#34;amazon-shortcode&#34; target=&#34;_blank&#34;&gt;
      &lt;img src=&#34;https://images-fe.ssl-images-amazon.com/images/I/51G1TiUZprL._SL160_.jpg&#34; alt=&#34;プログラマのためのDocker教科書 インフラの基礎知識&amp;amp;コードによる環境構築の自動化&#34; /&gt;
    &lt;/a&gt;
  &lt;/div&gt;
  &lt;div class=&#34;amazon-shortcode-info&#34;&gt;
    &lt;p class=&#34;amazon-shortcode-title&#34;&gt;
      &lt;a href=&#34;https://www.amazon.co.jp/%E3%83%97%E3%83%AD%E3%82%B0%E3%83%A9%E3%83%9E%E3%81%AE%E3%81%9F%E3%82%81%E3%81%AEDocker%E6%95%99%E7%A7%91%E6%9B%B8-%E3%82%A4%E3%83%B3%E3%83%95%E3%83%A9%E3%81%AE%E5%9F%BA%E7%A4%8E%E7%9F%A5%E8%AD%98-%E3%82%B3%E3%83%BC%E3%83%89%E3%81%AB%E3%82%88%E3%82%8B%E7%92%B0%E5%A2%83%E6%A7%8B%E7%AF%89%E3%81%AE%E8%87%AA%E5%8B%95%E5%8C%96-%E9%98%BF%E4%BD%90-%E5%BF%97%E4%BF%9D/dp/479814102X%3FSubscriptionId%3DAKIAJCAHSSNNKIXIAI2Q%26tag%3Denomotodev-22%26linkCode%3Dxm2%26camp%3D2025%26creative%3D165953%26creativeASIN%3D479814102X&#34; name=&#34;amazon-shortcode&#34; target=&#34;_blank&#34;&gt;
        プログラマのためのDocker教科書 インフラの基礎知識&amp;amp;コードによる環境構築の自動化
      &lt;/a&gt;
    &lt;/p&gt;
    
      &lt;p class=&#34;amazon-shortcode-author&#34;&gt;阿佐 志保&lt;/p&gt;
    
    &lt;div class=&#34;amazon-shortcode-detail&#34;&gt;
      
        &lt;p&gt;出版社：翔泳社&lt;/p&gt;
      
      
        &lt;p&gt;発売日：2015-11-20&lt;/p&gt;
      
    &lt;/div&gt;
    &lt;p&gt;
      &lt;a href=&#34;https://www.amazon.co.jp/%E3%83%97%E3%83%AD%E3%82%B0%E3%83%A9%E3%83%9E%E3%81%AE%E3%81%9F%E3%82%81%E3%81%AEDocker%E6%95%99%E7%A7%91%E6%9B%B8-%E3%82%A4%E3%83%B3%E3%83%95%E3%83%A9%E3%81%AE%E5%9F%BA%E7%A4%8E%E7%9F%A5%E8%AD%98-%E3%82%B3%E3%83%BC%E3%83%89%E3%81%AB%E3%82%88%E3%82%8B%E7%92%B0%E5%A2%83%E6%A7%8B%E7%AF%89%E3%81%AE%E8%87%AA%E5%8B%95%E5%8C%96-%E9%98%BF%E4%BD%90-%E5%BF%97%E4%BF%9D/dp/479814102X%3FSubscriptionId%3DAKIAJCAHSSNNKIXIAI2Q%26tag%3Denomotodev-22%26linkCode%3Dxm2%26camp%3D2025%26creative%3D165953%26creativeASIN%3D479814102X&#34; name=&#34;backport&#34; target=&#34;_blank&#34;&gt;
        &lt;i class=&#34;fa fa-amazon&#34; aria-hidden=&#34;true&#34;&gt;&lt;/i&gt;&amp;nbsp;Amazonで詳細を見る
      &lt;/a&gt;
    &lt;/p&gt;
  &lt;/div&gt;
  &lt;br style=&#34;clear: both;&#34;/&gt;
&lt;/div&gt;




&lt;div class=&#34;amazon-shortcode-box&#34;&gt;
  &lt;div class=&#34;amazon-shortcode-image&#34;&gt;
    &lt;a href=&#34;https://www.amazon.co.jp/Docker%E3%82%A8%E3%82%AD%E3%82%B9%E3%83%91%E3%83%BC%E3%83%88%E9%A4%8A%E6%88%90%E8%AA%AD%E6%9C%AC%EF%BC%BB%E6%B4%BB%E7%94%A8%E3%81%AE%E5%9F%BA%E7%A4%8E%E3%81%A8%E5%AE%9F%E8%B7%B5%E3%83%8E%E3%82%A6%E3%83%8F%E3%82%A6%E6%BA%80%E8%BC%89%EF%BC%81%EF%BC%BD-Software-Design-plus-%E6%9D%89%E5%B1%B1/dp/4774174416%3FSubscriptionId%3DAKIAJCAHSSNNKIXIAI2Q%26tag%3Denomotodev-22%26linkCode%3Dxm2%26camp%3D2025%26creative%3D165953%26creativeASIN%3D4774174416&#34; name=&#34;amazon-shortcode&#34; target=&#34;_blank&#34;&gt;
      &lt;img src=&#34;https://images-fe.ssl-images-amazon.com/images/I/51gFcibBx-L._SL160_.jpg&#34; alt=&#34;Dockerエキスパート養成読本［活用の基礎と実践ノウハウ満載！］ (Software Design plus)&#34; /&gt;
    &lt;/a&gt;
  &lt;/div&gt;
  &lt;div class=&#34;amazon-shortcode-info&#34;&gt;
    &lt;p class=&#34;amazon-shortcode-title&#34;&gt;
      &lt;a href=&#34;https://www.amazon.co.jp/Docker%E3%82%A8%E3%82%AD%E3%82%B9%E3%83%91%E3%83%BC%E3%83%88%E9%A4%8A%E6%88%90%E8%AA%AD%E6%9C%AC%EF%BC%BB%E6%B4%BB%E7%94%A8%E3%81%AE%E5%9F%BA%E7%A4%8E%E3%81%A8%E5%AE%9F%E8%B7%B5%E3%83%8E%E3%82%A6%E3%83%8F%E3%82%A6%E6%BA%80%E8%BC%89%EF%BC%81%EF%BC%BD-Software-Design-plus-%E6%9D%89%E5%B1%B1/dp/4774174416%3FSubscriptionId%3DAKIAJCAHSSNNKIXIAI2Q%26tag%3Denomotodev-22%26linkCode%3Dxm2%26camp%3D2025%26creative%3D165953%26creativeASIN%3D4774174416&#34; name=&#34;amazon-shortcode&#34; target=&#34;_blank&#34;&gt;
        Dockerエキスパート養成読本［活用の基礎と実践ノウハウ満載！］ (Software Design plus)
      &lt;/a&gt;
    &lt;/p&gt;
    
      &lt;p class=&#34;amazon-shortcode-author&#34;&gt;杉山 貴章&lt;/p&gt;
    
    &lt;div class=&#34;amazon-shortcode-detail&#34;&gt;
      
        &lt;p&gt;出版社：技術評論社&lt;/p&gt;
      
      
        &lt;p&gt;発売日：2015-06-18&lt;/p&gt;
      
    &lt;/div&gt;
    &lt;p&gt;
      &lt;a href=&#34;https://www.amazon.co.jp/Docker%E3%82%A8%E3%82%AD%E3%82%B9%E3%83%91%E3%83%BC%E3%83%88%E9%A4%8A%E6%88%90%E8%AA%AD%E6%9C%AC%EF%BC%BB%E6%B4%BB%E7%94%A8%E3%81%AE%E5%9F%BA%E7%A4%8E%E3%81%A8%E5%AE%9F%E8%B7%B5%E3%83%8E%E3%82%A6%E3%83%8F%E3%82%A6%E6%BA%80%E8%BC%89%EF%BC%81%EF%BC%BD-Software-Design-plus-%E6%9D%89%E5%B1%B1/dp/4774174416%3FSubscriptionId%3DAKIAJCAHSSNNKIXIAI2Q%26tag%3Denomotodev-22%26linkCode%3Dxm2%26camp%3D2025%26creative%3D165953%26creativeASIN%3D4774174416&#34; name=&#34;backport&#34; target=&#34;_blank&#34;&gt;
        &lt;i class=&#34;fa fa-amazon&#34; aria-hidden=&#34;true&#34;&gt;&lt;/i&gt;&amp;nbsp;Amazonで詳細を見る
      &lt;/a&gt;
    &lt;/p&gt;
  &lt;/div&gt;
  &lt;br style=&#34;clear: both;&#34;/&gt;
&lt;/div&gt;
&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>