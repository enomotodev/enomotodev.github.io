<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Docker on enomotodev</title>
    <link>http://enomotodev.github.io/tags/docker/</link>
    <description>Recent content in Docker on enomotodev</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja_JP</language>
    <managingEditor>enomoto.dev@gmail.com (Takafumi Enomoto)</managingEditor>
    <webMaster>enomoto.dev@gmail.com (Takafumi Enomoto)</webMaster>
    <copyright>(c) 2016 enomotodev</copyright>
    <lastBuildDate>Mon, 12 Sep 2016 23:23:16 +0900</lastBuildDate>
    
	<atom:link href="http://enomotodev.github.io/tags/docker/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>CentOS 7 に Re:dash インストールして MySQL のデータをグラフ表示してみた</title>
      <link>http://enomotodev.github.io/post/install-redash/</link>
      <pubDate>Mon, 12 Sep 2016 23:23:16 +0900</pubDate>
      <author>enomoto.dev@gmail.com (Takafumi Enomoto)</author>
      <guid>http://enomotodev.github.io/post/install-redash/</guid>
      <description>作業環境  CentOS 7.2 Java 1.8.0_101 MySQL 5.7.14 Git 1.8.3.1  Docker + Docker Compose のインストール Re:dash は CentOS では Docker のコンテナ上で起動させるので、まずは Docker をインストールします。
Kernel のバージョンを確認する CentOS 7 に Docker をインストールするには Kernel が 3.10 以上ではないといけないようなので Kernel のバージョンを確認します。
$ uname -r 3.10.0-327.el7.x86_64  3.10 以上なので、Docker のインストールを進めていきます。
Docker のインストール まずは root ユーザに変更します。
$ sudo su -  ここからは root ユーザでの作業にになります。
次のコマンドで Docker のインストールができます。
# curl -fsSL https://get.docker.com/ | sh  インストールが完了したので、バージョンを確認します。</description>
    </item>
    
    <item>
      <title>【 Composer 編】Mac に Docker インストールしてみた</title>
      <link>http://enomotodev.github.io/post/docker-mac-composer/</link>
      <pubDate>Fri, 29 Apr 2016 14:33:00 +0900</pubDate>
      <author>enomoto.dev@gmail.com (Takafumi Enomoto)</author>
      <guid>http://enomotodev.github.io/post/docker-mac-composer/</guid>
      <description>前回の『【 php-fpm 編】Mac に Docker インストールしてみた』の続きです
Database と連携する前に、Composer と連携し、PHP フレームワークの Laravel をインストールしてみようと思います
Composer のイメージを pull する $ docker pull composer/composer ...（略） Status: Downloaded newer image for composer/composer:latest  Composer コンテナを起動する Composer で Laravel をインストールする前に、前回作成した index.php を削除しておきましょう
cd ~/docker/www &amp;amp;&amp;amp; rm index.php  それでは Composer で　Laravel をインストールしてみます
$ docker run --rm -v /Users/enomotodev/docker/www:/app composer/composer create-project --prefer-dist laravel/laravel ./  これで Laravel がインストールされました
--rm オプションを使用することによって、コンテナを起動して終了するとコンテナを破棄してくれます
~/nginx/nginx.conf を下記のように編集して、Nginx のコンテナを再起動させます
 ~/nginx/nginx.conf  root /var/www/html; ↓ root /var/www/html/public;   Nginx コンテナを再起動  $ docker restart nginx  次にパーミッションを整えます</description>
    </item>
    
    <item>
      <title>【 php-fpm 編】Mac に Docker インストールしてみた</title>
      <link>http://enomotodev.github.io/post/docker-mac-phpfpm/</link>
      <pubDate>Sun, 24 Apr 2016 02:06:12 +0900</pubDate>
      <author>enomoto.dev@gmail.com (Takafumi Enomoto)</author>
      <guid>http://enomotodev.github.io/post/docker-mac-phpfpm/</guid>
      <description>前回の『【 Nginx 編】Mac に Docker インストールしてみた』の続きです。
コンテナを削除する Nginx のコンテナなどが稼働していると思うので、一旦全て削除します
$ docker rm -f `docker ps -a -q`  php-fpm のイメージを pull する 公式の php-fpm のイメージを pull します
$ docker pull php:fpm ...（略） Status: Downloaded newer image for php:fpm  php-fpm のコンテナを起動する 最初に Document Root に配置する PHP ファイルを作成します
 ~/docker/www/index.php  &amp;lt;?php phpinfo(); ?&amp;gt;  PHP ファイルの準備ができたら php-fpm のコンテナを起動しましょう
$ docker run --name fpm -p 9000:9000 -v /Users/enomotodev/docker/www:/var/www/html -d php:fpm  --name オプションで fpm と指定することによって、fpm という名前でコンテナを起動しています</description>
    </item>
    
    <item>
      <title>【 Nginx 編】Mac に Docker インストールしてみた</title>
      <link>http://enomotodev.github.io/post/docker-mac-nginx/</link>
      <pubDate>Mon, 04 Apr 2016 23:33:12 +0900</pubDate>
      <author>enomoto.dev@gmail.com (Takafumi Enomoto)</author>
      <guid>http://enomotodev.github.io/post/docker-mac-nginx/</guid>
      <description>前回の『Mac に Docker インストールしてみた』の続きです。
実際に Nginx + PHP + MySQL 環境を構築するにあたって、今回は Nginx コンテナを起動させて、静的コンテンツの表示までを行いたいと思います。
Docker Machine の起動 前回から、PC をシャットダウンしたり、再起動している場合は、もう一度 Docker Machine を起動させなければいけないので、下記のコマンドで起動させてください。（それ以外の方は次の『Nginx コンテナを起動させる』から読んでください）
$ docker-machine start dev-machine Starting &amp;quot;dev-machine&amp;quot;... (dev-machine) Waiting for an IP... Machine &amp;quot;dev-machine&amp;quot; was started. Waiting for SSH to be available... Detecting the provisioner... Started machines may have new IP addresses. You may need to re-run the `docker-machine env` command.  前回と同じ手順を踏んで、Docker Machine に接続できるようにしていきます。
$ docker-machine env dev-machine export DOCKER_TLS_VERIFY=&amp;quot;1&amp;quot; export DOCKER_HOST=&amp;quot;tcp://192.</description>
    </item>
    
    <item>
      <title>Mac に Docker インストールしてみた</title>
      <link>http://enomotodev.github.io/post/install-docker-mac/</link>
      <pubDate>Mon, 28 Mar 2016 12:48:00 +0900</pubDate>
      <author>enomoto.dev@gmail.com (Takafumi Enomoto)</author>
      <guid>http://enomotodev.github.io/post/install-docker-mac/</guid>
      <description>Docker + Docker Machine のインストール まずは、Docker 本体と Docker Machine をインストールします。
Mac だと Docker を直接的に実行できないのですが、Docker Machine を使用すると、一旦VM上で CoreOS や boot2docker を実行して、その上で簡単に Docker を実行できるようになります。
インストール自体はどちらも Homebrew で簡単にインストールすることができます。
$ brew install docker docker-machine  Machine の作成 docker-machine コマンドで新しく Machine を作成します。
$ docker-machine create -d virtualbox dev-machine ・・・（省略） Setting Docker configuration on the remote daemon... Checking connection to Docker... Docker is up and running! To see how to connect your Docker Client to the Docker Engine running on this virtual machine, run: docker-machine env dev-machine  上記の dev-machine の部分は Machine の名前になるので、好きな名前をつけてかまいません。</description>
    </item>
    
  </channel>
</rss>